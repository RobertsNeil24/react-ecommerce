{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnaphotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nimport { fetchCollectionSuccess, fetchCollectionFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('Triggered');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnaphotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionFailure(error.message));\n  } //    collectionRef.get().then(snapshot => {\n  //            const collectionsMap = convertCollectionsSnaphotToMap(snapshot);\n  //            dispatch(fetchCollectionSuccess(collectionsMap));\n  //    })\n  //    .catch(error => dispatch(fetchCollectionFailure(error.message)));\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/Work/ReactCourse/CompleteReact/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnaphotToMap","ShopActionTypes","fetchCollectionSuccess","fetchCollectionFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,QAA+D,gBAA/D;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACtC,QAAMC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAN;;AAGA,MAAI;AACC,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,8BAAD,EAAiCS,QAAjC,CAAjC;AACA,UAAMX,GAAG,CAACI,sBAAsB,CAACS,cAAD,CAAvB,CAAT;AACJ,GALD,CAKE,OAAOC,KAAP,EAAc;AACX,UAAMd,GAAG,CAACK,sBAAsB,CAACS,KAAK,CAACC,OAAP,CAAvB,CAAT;AACJ,GAXqC,CAazC;AACA;AACA;AACA;AACA;;AACC;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMlB,SAAS,CACXK,eAAe,CAACc,uBADL,EAEXX,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnaphotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nimport { fetchCollectionSuccess, fetchCollectionFailure } from './shop.actions';\n\nexport function* fetchCollectionsAsync() {\n   yield console.log('Triggered');\n\n\n   try {\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get();\n        const collectionsMap = yield call(convertCollectionsSnaphotToMap, snapshot);\n        yield put(fetchCollectionSuccess(collectionsMap));\n   } catch (error) {\n        yield put(fetchCollectionFailure(error.message));\n   }\n\n//    collectionRef.get().then(snapshot => {\n//            const collectionsMap = convertCollectionsSnaphotToMap(snapshot);\n//            dispatch(fetchCollectionSuccess(collectionsMap));\n//    })\n//    .catch(error => dispatch(fetchCollectionFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync \n    );\n}"]},"metadata":{},"sourceType":"module"}