{"ast":null,"code":"var _jsxFileName = \"/Users/Work/ReactCourse/CompleteReact/crwn-clothing/src/pages/shop/shop.component.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { FetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const FetchCollectionsStartAsync = this.props.FetchCollectionsStartAsync;\n    FetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching,\n          isCollectionsLoaded = _this$props.isCollectionsLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  FetchCollectionsStartAsync: () => dispatch(FetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/Work/ReactCourse/CompleteReact/crwn-clothing/src/pages/shop/shop.component.js"],"names":["React","Component","Route","connect","createStructuredSelector","FetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","CollectionsOverview","CollectionPage","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","componentDidMount","props","render","match","isCollectionFetching","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA0C,+BAA1C;AACA,SAASC,0BAAT,EAAqCC,yBAArC,QAAsE,iCAAtE;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACF,mBAAD,CAAjD;AACA,MAAMI,yBAAyB,GAAGF,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMI,QAAN,SAAuBZ,SAAvB,CAAiC;AAE7Ba,EAAAA,iBAAiB,GAAG;AAAA,UACTT,0BADS,GACuB,KAAKU,KAD5B,CACTV,0BADS;AAEjBA,IAAAA,0BAA0B;AAC5B;;AAEDW,EAAAA,MAAM,GAAG;AAAA,wBACwD,KAAKD,KAD7D;AAAA,UACGE,KADH,eACGA,KADH;AAAA,UACUC,oBADV,eACUA,oBADV;AAAA,UACgCC,mBADhC,eACgCA,mBADhC;AAGL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKF,KAAK,CAACG,IAAX,CAAjB;AACI,MAAA,MAAM,EAAGL,KAAD,IAAW,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEG;AAA1C,SAAoEH,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKE,KAAK,CAACG,IAAX,mBAAX;AACI,MAAA,MAAM,EAAGL,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACI;AAAvC,SAAgEJ,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAQH;;AAlB4B;;AAoBhC;AAED,MAAMM,eAAe,GAAGjB,wBAAwB,CAAC;AAC7Cc,EAAAA,oBAAoB,EAAEZ,0BADuB;AAE7Ca,EAAAA,mBAAmB,EAAEZ;AAFwB,CAAD,CAAhD;;AAKA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACrClB,EAAAA,0BAA0B,EAAE,MAAMkB,QAAQ,CAAClB,0BAA0B,EAA3B;AADL,CAAL,CAAnC;;AAKA,eAAeF,OAAO,CAACkB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { FetchCollectionsStartAsync} from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n\n    componentDidMount() {\n       const { FetchCollectionsStartAsync }  = this.props;\n       FetchCollectionsStartAsync();\n    }\n\n    render() {\n        const { match, isCollectionFetching, isCollectionsLoaded } = this.props;\n \n        return (\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`}\n                    render={(props) => <CollectionOverviewWithSpinner isLoading={isCollectionFetching} {...props} />} />\n                <Route path={`${match.path}/:collectionId`}\n                    render={(props) => <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props} />} />\n            </div>\n        )\n    }\n\n};\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching,\n    isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n   FetchCollectionsStartAsync: () => dispatch(FetchCollectionsStartAsync())\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}