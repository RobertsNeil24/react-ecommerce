{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnaphotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const FetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnaphotToMap(snapshot);\n      dispatch(fetchCollectionSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/Work/ReactCourse/CompleteReact/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnaphotToMap","fetchCollectionStart","type","FETCH_COLLECTIONS_START","fetchCollectionSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","FetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AAEA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACvCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADiB,CAAP,CAA7B;AAIP,OAAO,MAAMC,sBAAsB,GAAGC,cAAc,KAAK;AACrDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBAD+B;AAErDC,EAAAA,OAAO,EAAEF;AAF4C,CAAL,CAA7C;AAKP,OAAO,MAAMG,sBAAsB,GAAGC,YAAY,KAAK;AACnDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD6B;AAEnDH,EAAAA,OAAO,EAAEE;AAF0C,CAAL,CAA3C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,oBAAoB,EAArB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AAC7B,YAAMZ,cAAc,GAAGL,8BAA8B,CAACiB,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACR,sBAAsB,CAACC,cAAD,CAAvB,CAAR;AACP,KAHD,EAICa,KAJD,CAIOC,KAAK,IAAIP,QAAQ,CAACJ,sBAAsB,CAACW,KAAK,CAACC,OAAP,CAAvB,CAJxB;AAKH,GATD;AAUH,CAXM","sourcesContent":["import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnaphotToMap } from '../../firebase/firebase.utils';\n\nexport const fetchCollectionStart = () => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionSuccess = collectionsMap => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n});\n\nexport const fetchCollectionFailure = errorMessage => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n})\n\nexport const FetchCollectionsStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n        dispatch(fetchCollectionStart());\n\n        collectionRef.get().then(snapshot => {\n                const collectionsMap = convertCollectionsSnaphotToMap(snapshot);\n                dispatch(fetchCollectionSuccess(collectionsMap));\n        })\n        .catch(error => dispatch(fetchCollectionFailure(error.message)));\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}